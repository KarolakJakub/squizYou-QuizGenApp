{"ast":null,"code":"var _jsxFileName = \"/home/j/Projects/squizuForked/squizYou-QuizGenApp/src/components/quizGenerator/QuizesGenList.js\";\nimport React from 'react';\nimport { QuizContext } from '../../contexts/QuizContext';\nimport { fetchQuiz, addNewQuiz, deleteQuiz } from '../../services/QuizService';\nimport { BrowserRouter as Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Dimmer, Loader, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './QuizGenList.css';\nimport './QuizGenWrapperStyles.css';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nclass QuizesGenList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quizes: [],\n      listIsLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      listIsLoading: true\n    });\n    const quizesRef = fetchQuiz(quizes => {\n      this.context.setQuizes(quizes);\n      this.setState({\n        quizes,\n        listIsLoading: false\n      });\n    });\n    return () => {\n      quizesRef.off('value');\n    };\n  }\n\n  addNewQuizAndFollow(quizId) {\n    const newUniqueId = addNewQuiz(quizId);\n    this.props.history.push(\"/quizes-gen-list/\".concat(newUniqueId));\n  }\n\n  handleRemoveQuiz(uniqueId) {\n    deleteQuiz(uniqueId);\n  }\n\n  render() {\n    const listIsLoading = this.state.listIsLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, listIsLoading ? React.createElement(Dimmer, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"massive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Prosz\\u0119 czeka\\u0107...\")) : React.createElement(\"div\", {\n      className: \"listWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.quizes.map(quiz => {\n      return React.createElement(\"li\", {\n        className: \"listQuiz\",\n        key: quiz.uniqueId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, quiz.title, \", liczba pyta\\u0144: \", quiz.questions.length, React.createElement(\"div\", {\n        className: \"buttonsWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/quizes-gen-list/\".concat(quiz.uniqueId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        positive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"EDYTUJ\")), React.createElement(Button.Or, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: () => this.handleRemoveQuiz(quiz.uniqueId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"USU\\u0143\"))));\n    })), React.createElement(\"button\", {\n      className: \"addQuizButton\",\n      onClick: () => this.addNewQuizAndFollow(this.state.quizes.length + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"NOWY QUIZ\"), React.createElement(ScrollUpButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), \" \");\n  }\n\n}\n\nQuizesGenList.contextType = QuizContext;\nexport default withRouter(QuizesGenList);","map":{"version":3,"sources":["/home/j/Projects/squizuForked/squizYou-QuizGenApp/src/components/quizGenerator/QuizesGenList.js"],"names":["React","QuizContext","fetchQuiz","addNewQuiz","deleteQuiz","BrowserRouter","Route","Link","Redirect","withRouter","Dimmer","Loader","Button","ScrollUpButton","QuizesGenList","Component","state","quizes","listIsLoading","componentDidMount","setState","quizesRef","context","setQuizes","off","addNewQuizAndFollow","quizId","newUniqueId","props","history","push","handleRemoveQuiz","uniqueId","render","map","quiz","title","questions","length","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { QuizContext } from '../../contexts/QuizContext'\nimport { fetchQuiz, addNewQuiz, deleteQuiz } from '../../services/QuizService'\nimport { BrowserRouter as Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Dimmer, Loader, Button } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport './QuizGenList.css'\nimport './QuizGenWrapperStyles.css'\nimport ScrollUpButton from \"react-scroll-up-button\";\n\n\n\nclass QuizesGenList extends React.Component {\n\n\n    static contextType = QuizContext\n\n    state = {\n        quizes: [],\n        listIsLoading: false\n    }\n\n    componentDidMount() {\n        this.setState({ listIsLoading: true })\n        const quizesRef = fetchQuiz(quizes => {\n\n            this.context.setQuizes(quizes)\n\n            this.setState({ quizes, listIsLoading: false })\n        })\n\n        return () => { quizesRef.off('value') }\n    }\n\n    addNewQuizAndFollow(quizId) {\n        const newUniqueId = addNewQuiz(quizId)\n        this.props.history.push(`/quizes-gen-list/${newUniqueId}`)\n    }\n\n    handleRemoveQuiz(uniqueId) {\n        deleteQuiz(uniqueId)\n    }\n\n\n\n    render() {\n\n        const { listIsLoading } = this.state\n\n        return <div>\n            {listIsLoading ?\n      <Dimmer active>\n        <Loader size='massive'>Proszę czekać...</Loader>\n      </Dimmer>\n\n     :\n                \n                <div className='listWrapper'>\n                    <ul>\n                        {this.state.quizes.map(quiz => {\n                            return <li className='listQuiz' key={quiz.uniqueId}>{quiz.title}, liczba pytań: {quiz.questions.length}\n                                <div className='buttonsWrap'>\n                                <Button.Group> \n                                        <Link to={`/quizes-gen-list/${quiz.uniqueId}`}>\n                                        <Button positive>\n                                            EDYTUJ\n                                        </Button> \n                                        </Link>\n                                        <Button.Or />\n                                        <Button onClick={() => this.handleRemoveQuiz(quiz.uniqueId)}>\n                                            USUŃ\n                                        </Button>\n                                    </Button.Group>\n                                </div>\n                            </li>\n                        })}\n                    </ul>\n                    <button className='addQuizButton' onClick={() => this.addNewQuizAndFollow(this.state.quizes.length + 1)}>NOWY QUIZ</button>\n                    <ScrollUpButton />\n                </div>\n             \n            } </div>\n    }\n}\n\nexport default withRouter(QuizesGenList)\n"]},"metadata":{},"sourceType":"module"}