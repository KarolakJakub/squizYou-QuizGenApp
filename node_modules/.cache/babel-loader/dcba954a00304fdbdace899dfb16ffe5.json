{"ast":null,"code":"var _jsxFileName = \"/home/j/Projects/squizuForked/squizYou-QuizGenApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport NewNavbar from \"./components/Navbar/NewNavbar\";\nimport QuizGenWrapper from \"./components/quizGenerator/QuizGenWrapper\";\nimport QuizList from \"./components/Quiz/QuizList.js\";\nimport Quiz from \"./components/Quiz/Quiz\";\nimport Home from \"./Home\";\nimport { QuizProvider } from \"./contexts/QuizContext\";\nimport { getUserNameByUniqueId } from './services/AuthService';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport QuizesGenList from './components/quizGenerator/QuizesGenList'; // import LandingPage from \"./components/LandingPage/LandingPage\";\n// import LogoutButton from './components/Navbar/LogoutButton'\n\nconst NoMatch = () => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"404\");\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: false,\n      uniqueId: '',\n      userName: ''\n    };\n  }\n\n  onLoginFromApp(uniqueId) {\n    getUserNameByUniqueId(uniqueId, userName => {\n      this.setState({\n        isLoggedIn: true,\n        uniqueId: uniqueId,\n        userName: userName\n      });\n    });\n  }\n\n  onLogout() {\n    this.setState({\n      isLoggedIn: false,\n      uniqueId: '',\n      userName: ''\n    });\n  }\n\n  render() {\n    return React.createElement(QuizProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(NewNavbar, {\n      isLoggedIn: this.state.isLoggedIn,\n      onClickLogout: this.onLogout.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        isLoggedIn: this.state.isLoggedIn,\n        onLogin: this.onLoginFromApp.bind(this),\n        userName: this.state.userName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/quizes-gen-list\",\n      component: QuizesGenList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/quizes-gen-list/:id\",\n      component: QuizGenWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/quizlist\",\n      component: QuizList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/quiz/:id\",\n      component: Quiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/home\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NoMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/j/Projects/squizuForked/squizYou-QuizGenApp/src/App.js"],"names":["React","Component","NewNavbar","QuizGenWrapper","QuizList","Quiz","Home","QuizProvider","getUserNameByUniqueId","BrowserRouter","Router","Route","Switch","Redirect","QuizesGenList","NoMatch","App","state","isLoggedIn","uniqueId","userName","onLoginFromApp","setState","onLogout","render","bind","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,OAAOC,aAAP,MAA0B,0CAA1B,C,CACA;AACA;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB;;AAEA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BgB,KAF0B,GAElB;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAFkB;AAAA;;AAS1BC,EAAAA,cAAc,CAACF,QAAD,EAAW;AAEvBX,IAAAA,qBAAqB,CAACW,QAAD,EAAYC,QAAQ,IAAI;AAG3C,WAAKE,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAE,IADA;AAEZC,QAAAA,QAAQ,EAAEA,QAFE;AAGZC,QAAAA,QAAQ,EAAEA;AAHE,OAAd;AAKD,KARoB,CAArB;AAUD;;AAEDG,EAAAA,QAAQ,GAAE;AACR,SAAKD,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAE,KADA;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,QAAQ,EAAE;AAHE,KAAd;AAKD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,UAAlC;AAA8C,MAAA,aAAa,EAAE,KAAKK,QAAL,CAAcE,IAAd,CAAmB,IAAnB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAGC,KAAD,IAC5B,oBAAC,IAAD,oBAAUA,KAAV;AAAiB,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWC,UAAxC;AAAoD,QAAA,OAAO,EAAE,KAAKG,cAAL,CAAoBI,IAApB,CAAyB,IAAzB,CAA7D;AAA6F,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWG,QAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,kBAAlB;AAAqC,MAAA,SAAS,EAAEN,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,sBAAlB;AAAyC,MAAA,SAAS,EAAEX,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAWE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEU,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAFF,CADF,CAHF,CADF;AAyBD;;AAzDyB;;AA4D5B,eAAeC,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport NewNavbar from \"./components/Navbar/NewNavbar\";\nimport QuizGenWrapper from \"./components/quizGenerator/QuizGenWrapper\";\nimport QuizList from \"./components/Quiz/QuizList.js\";\nimport Quiz from \"./components/Quiz/Quiz\";\nimport Home from \"./Home\";\nimport { QuizProvider } from \"./contexts/QuizContext\";\nimport { getUserNameByUniqueId } from './services/AuthService'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport QuizesGenList from './components/quizGenerator/QuizesGenList'\n// import LandingPage from \"./components/LandingPage/LandingPage\";\n// import LogoutButton from './components/Navbar/LogoutButton'\n\nconst NoMatch = () => <h1>404</h1>;\n\nclass App extends Component {\n\n  state = {\n    isLoggedIn: false,\n    uniqueId: '',\n    userName: ''\n  }\n\n\n  onLoginFromApp(uniqueId) {\n\n    getUserNameByUniqueId(uniqueId, (userName => {\n\n    \n      this.setState({\n        isLoggedIn: true,\n        uniqueId: uniqueId,\n        userName: userName\n      })\n    }))\n\n  }\n\n  onLogout(){\n    this.setState({\n      isLoggedIn: false,\n      uniqueId: '',\n      userName: ''\n    })\n  }\n\n  render() {\n    return (\n      <QuizProvider>\n\n \n        <Router>\n          <div>\n            <NewNavbar isLoggedIn={this.state.isLoggedIn} onClickLogout={this.onLogout.bind(this)}/>\n            <Switch>\n              <Route exact path=\"/\" render={(props) =>\n                <Home {...props} isLoggedIn={this.state.isLoggedIn} onLogin={this.onLoginFromApp.bind(this)} userName={this.state.userName} />\n              } />\n              {/* {this.state.isLoggedIn ? \n              <> */}\n              <Route exact path=\"/quizes-gen-list\" component={QuizesGenList} />\n              <Route exact path=\"/quizes-gen-list/:id\" component={QuizGenWrapper} />\n              <Route path=\"/quizlist\" component={QuizList} />\n              <Route path=\"/quiz/:id\" component={Quiz} />\n              {/* </>:null} */}\n              <Redirect from=\"/home\" to=\"/\" />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </Router>\n      </QuizProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}