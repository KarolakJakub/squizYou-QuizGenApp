{"ast":null,"code":"var _jsxFileName = \"/home/j/Projects/squizuForked/squizYou-QuizGenApp/src/components/Quiz/QuizList.js\";\nimport React from \"react\";\nimport styles from \"./QuizTitle.module.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { fetchQuiz } from \"../../services/QuizService\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"../quizGenerator/QuizGenList.css\";\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nconst Button = ({\n  children,\n  disabled = false,\n  onClick,\n  isQuestionNumber\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  disabled: disabled,\n  className: \"\".concat(styles.buttonQuestion, \" \").concat(styles.buttonQuestionNumber),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, children);\n\nconst Spinner = () => React.createElement(Dimmer, {\n  active: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Loader, {\n  size: \"massive\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Prosz\\u0119 czeka\\u0107...\"));\n\nexport default class QuizList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listIsLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      listIsLoading: true\n    });\n    fetchQuiz(quizes => {\n      this.setState({\n        quizes,\n        listIsLoading: false\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          listIsLoading = _this$state.listIsLoading,\n          quizes = _this$state.quizes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, listIsLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.quizes.map(quiz => React.createElement(QuizButton, {\n      link: quizes.indexOf(quiz) + 1,\n      title: quiz.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), \" \");\n  }\n\n}\n\nfunction QuizButton(props) {\n  const key = props.key,\n        onClick = props.onClick,\n        link = props.link,\n        title = props.title,\n        currentQuizId = props.currentQuizId;\n  return React.createElement(\"div\", {\n    className: \"genListWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"startQuizList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"linkStyles\",\n    to: \"/quiz/\".concat(link - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"startQuizButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, title), React.createElement(ScrollUpButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/j/Projects/squizuForked/squizYou-QuizGenApp/src/components/Quiz/QuizList.js"],"names":["React","styles","BrowserRouter","Router","Route","Link","fetchQuiz","Dimmer","Loader","ScrollUpButton","Button","children","disabled","onClick","isQuestionNumber","buttonQuestion","buttonQuestionNumber","Spinner","QuizList","Component","state","listIsLoading","componentDidMount","setState","quizes","render","map","quiz","indexOf","title","QuizButton","props","key","link","currentQuizId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./QuizTitle.module.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { fetchQuiz } from \"../../services/QuizService\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"../quizGenerator/QuizGenList.css\";\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nconst Button = ({ children, disabled = false, onClick, isQuestionNumber }) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    className={`${styles.buttonQuestion} ${styles.buttonQuestionNumber}`}\n  >\n    {children}\n  </button>\n);\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"massive\">Proszę czekać...</Loader>\n  </Dimmer>\n);\nexport default class QuizList extends React.Component {\n  state = {\n    listIsLoading: true\n  };\n\n  componentDidMount() {\n    this.setState({ listIsLoading: true });\n    fetchQuiz(quizes => {\n      this.setState({ quizes, listIsLoading: false });\n    });\n  }\n\n  render() {\n    const { listIsLoading, quizes } = this.state;\n\n    return (\n      <div>\n        {listIsLoading ? (\n          <Spinner />\n        ) : (\n          <div>\n            {this.state.quizes.map(quiz => (\n              <QuizButton link={quizes.indexOf(quiz) + 1} title={quiz.title} />\n            ))}\n          </div>\n        )}{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction QuizButton(props) {\n  const { key, onClick, link, title, currentQuizId } = props;\n\n  return (\n    <div className=\"genListWrapper\">\n      <ul>\n        <li className=\"startQuizList\">\n          <Link className=\"linkStyles\" to={`/quiz/${link - 1}`}>\n            <button className=\"startQuizButton\">{title}</button>\n            <ScrollUpButton />\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}