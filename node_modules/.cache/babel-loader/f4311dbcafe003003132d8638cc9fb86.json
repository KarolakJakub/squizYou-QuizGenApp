{"ast":null,"code":"var _jsxFileName = \"/home/j/Projects/squizuForked/jfdd12-ubuntuwnicy-app/src/components/Quiz/QuestionsButtons.js\";\nimport React from \"react\";\nimport styles from \"./QuizTitle.module.css\";\n\nconst Button = ({\n  children,\n  disabled = false,\n  onClick,\n  isQuestionNumber\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  disabled: disabled,\n  className: \"\".concat(styles.buttonQuestion, \" \").concat(styles.buttonQuestionNumber),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, children);\n\nconst Arrowbutton = ({\n  children,\n  disabled = false,\n  onClick,\n  isQuestionNumber\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  disabled: disabled,\n  className: \"\".concat(styles.arrowButtonQuestion, \" \").concat(styles.buttonQuestionNumber),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, children);\n\nconst DoubleArrowButtonQuestion = ({\n  children,\n  disabled = false,\n  onClick,\n  isQuestionNumber\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  disabled: disabled,\n  className: \"\".concat(styles.doubleArrowButtonQuestion),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, children);\n\nexport class QuestionsButtons extends React.Component {\n  render() {\n    const _this$props = this.props,\n          onQuestionChangeHandler = _this$props.onQuestionChangeHandler,\n          currentQuestionId = _this$props.currentQuestionId,\n          totalNumberOfQuestion = _this$props.totalNumberOfQuestion,\n          questions = _this$props.questions;\n\n    const renderButtons = () => {\n      let questions = Array(this.props.questions.questions.length) // [].length == 10\n      .fill(1) // [1,1,1,1,1,1,1,1,1,1,1]\n      .map((_, index) => index + 1); // [1,2,3,4,5,6,7,8,9,10]\n\n      if (currentQuestionId < 3) {\n        questions = questions.slice(0, 5);\n      } else if (currentQuestionId > totalNumberOfQuestion - 3) {\n        questions = questions.slice(-5);\n      } else {\n        questions = questions.slice(currentQuestionId - 2, currentQuestionId + 3);\n      }\n\n      return questions.map((question, index) => React.createElement(Button, {\n        onClick: () => {\n          onQuestionChangeHandler(question - 1);\n        },\n        disabled: currentQuestionId + 1 === question,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, question));\n    };\n\n    return React.createElement(\"div\", {\n      className: styles.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(DoubleArrowButtonQuestion, {\n      disabled: !currentQuestionId,\n      onClick: () => onQuestionChangeHandler(0),\n      className: styles.doubleArrowButtonQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"<<\"), React.createElement(Arrowbutton, {\n      disabled: !currentQuestionId,\n      onClick: () => onQuestionChangeHandler(currentQuestionId - 1),\n      className: \"\".concat(styles.arrowButtonQuestion, \" \").concat(styles.buttonQuestionNumber),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"<\"), renderButtons(), React.createElement(Arrowbutton, {\n      disabled: currentQuestionId === totalNumberOfQuestion - 1,\n      onClick: () => onQuestionChangeHandler(currentQuestionId + 1),\n      className: \"\".concat(styles.arrowButtonQuestion, \" \").concat(styles.buttonQuestionNumber),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \">\"), React.createElement(DoubleArrowButtonQuestion, {\n      disabled: currentQuestionId === totalNumberOfQuestion - 1,\n      onClick: () => onQuestionChangeHandler(totalNumberOfQuestion - 1),\n      className: styles.doubleArrowButtonQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \">>\"));\n  }\n\n}","map":{"version":3,"sources":["/home/j/Projects/squizuForked/jfdd12-ubuntuwnicy-app/src/components/Quiz/QuestionsButtons.js"],"names":["React","styles","Button","children","disabled","onClick","isQuestionNumber","buttonQuestion","buttonQuestionNumber","Arrowbutton","arrowButtonQuestion","DoubleArrowButtonQuestion","doubleArrowButtonQuestion","QuestionsButtons","Component","render","props","onQuestionChangeHandler","currentQuestionId","totalNumberOfQuestion","questions","renderButtons","Array","length","fill","map","_","index","slice","question","pagination"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./QuizTitle.module.css\";\n\nconst Button = ({ children, disabled = false, onClick, isQuestionNumber }) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    className={`${styles.buttonQuestion} ${styles.buttonQuestionNumber}`}\n  >\n    {children}\n  </button>\n);\n\nconst Arrowbutton = ({\n  children,\n  disabled = false,\n  onClick,\n  isQuestionNumber\n}) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    className={`${styles.arrowButtonQuestion} ${styles.buttonQuestionNumber}`}\n  >\n    {children}\n  </button>\n);\n\nconst DoubleArrowButtonQuestion = ({\n  children,\n  disabled = false,\n  onClick,\n  isQuestionNumber\n}) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    className={`${styles.doubleArrowButtonQuestion}`}\n  >\n    {children}\n  </button>\n);\n\nexport class QuestionsButtons extends React.Component {\n  render() {\n    const {\n      onQuestionChangeHandler,\n      currentQuestionId,\n      totalNumberOfQuestion,\n      questions\n    } = this.props;\n\n    const renderButtons = () => {\n      let questions = Array(this.props.questions.questions.length) // [].length == 10\n        .fill(1) // [1,1,1,1,1,1,1,1,1,1,1]\n        .map((_, index) => index + 1); // [1,2,3,4,5,6,7,8,9,10]\n      if (currentQuestionId < 3) {\n        questions = questions.slice(0, 5);\n      } else if (currentQuestionId > totalNumberOfQuestion - 3) {\n        questions = questions.slice(-5);\n      } else {\n        questions = questions.slice(\n          currentQuestionId - 2,\n          currentQuestionId + 3\n        );\n      }\n      return questions.map((question, index) => (\n        <Button\n          onClick={() => {\n            onQuestionChangeHandler(question - 1);\n          }}\n          disabled={currentQuestionId + 1 === question}\n          key={index}\n        >\n          {question}\n        </Button>\n      ));\n    };\n\n    return (\n      <div className={styles.pagination}>\n        <DoubleArrowButtonQuestion\n          disabled={!currentQuestionId}\n          onClick={() => onQuestionChangeHandler(0)}\n          className={styles.doubleArrowButtonQuestion}\n        >\n          {\"<<\"}\n        </DoubleArrowButtonQuestion>\n        <Arrowbutton\n          disabled={!currentQuestionId}\n          onClick={() => onQuestionChangeHandler(currentQuestionId - 1)}\n          className={`${styles.arrowButtonQuestion} ${\n            styles.buttonQuestionNumber\n          }`}\n        >\n          {\"<\"}\n        </Arrowbutton>\n        {renderButtons()}\n        <Arrowbutton\n          disabled={currentQuestionId === totalNumberOfQuestion - 1}\n          onClick={() => onQuestionChangeHandler(currentQuestionId + 1)}\n          className={`${styles.arrowButtonQuestion} ${\n            styles.buttonQuestionNumber\n          }`}\n        >\n          {\">\"}\n        </Arrowbutton>\n        <DoubleArrowButtonQuestion\n          disabled={currentQuestionId === totalNumberOfQuestion - 1}\n          onClick={() => onQuestionChangeHandler(totalNumberOfQuestion - 1)}\n          className={styles.doubleArrowButtonQuestion}\n        >\n          {\">>\"}\n        </DoubleArrowButtonQuestion>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}