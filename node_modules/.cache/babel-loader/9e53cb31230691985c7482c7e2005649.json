{"ast":null,"code":"var _jsxFileName = \"/home/j/Projects/squizuForked/jfdd12-ubuntuwnicy-app/src/components/quizGenerator/AnswerInput.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './QuizGenWrapperStyles.css';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nconst AnswerInput = function (props) {\n  const classes = useStyles();\n  const answer = props.answer,\n        isCorrect = props.isCorrect,\n        answerId = props.answerId,\n        onCheckboxChange = props.onCheckboxChange,\n        name = props.name,\n        onAnswerChange = props.onAnswerChange,\n        onClickRemoveAnswer = props.onClickRemoveAnswer;\n  return React.createElement(\"div\", {\n    className: \"answerInputsStyles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"answerInput\",\n    value: answer,\n    placeholder: \"Wprowad\\u017A odpowied\\u017A\",\n    onChange: onAnswerChange,\n    label: \"Odpowied\\u017A\",\n    multiline: true,\n    variant: \"outlined\",\n    answerid: answerId,\n    name: answerId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Checkbox, {\n    className: \"isAnswerCorrect\",\n    color: \"default\",\n    iscorrect: 'isCorrect',\n    onClick: onCheckboxChange,\n    answerid: answerId,\n    inputProps: {\n      'aria-label': 'checkbox with default color'\n    },\n    checked: isCorrect,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"removeAnswerButton\",\n    name: answerId,\n    onClick: onClickRemoveAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"X\"));\n};\n\nfunction arePropsEqual(prevProps, currProps) {\n  if (prevProps.answer === currProps.answer && prevProps.isCorrect === currProps.isCorrect && prevProps.answerId === currProps.answerId && prevProps.name === currProps.name) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default React.memo(AnswerInput, arePropsEqual);","map":{"version":3,"sources":["/home/j/Projects/squizuForked/jfdd12-ubuntuwnicy-app/src/components/quizGenerator/AnswerInput.js"],"names":["React","TextField","Checkbox","makeStyles","useStyles","theme","button","margin","spacing","input","display","AnswerInput","props","classes","answer","isCorrect","answerId","onCheckboxChange","name","onAnswerChange","onClickRemoveAnswer","arePropsEqual","prevProps","currProps","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,4BAAP;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,GAD2B;AAInCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE;AADN;AAJ4B,CAAL,CAAN,CAA5B;;AASA,MAAMC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAEjC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAFiC,QAIzBU,MAJyB,GAIoEF,KAJpE,CAIzBE,MAJyB;AAAA,QAIjBC,SAJiB,GAIoEH,KAJpE,CAIjBG,SAJiB;AAAA,QAINC,QAJM,GAIoEJ,KAJpE,CAINI,QAJM;AAAA,QAIIC,gBAJJ,GAIoEL,KAJpE,CAIIK,gBAJJ;AAAA,QAIsBC,IAJtB,GAIoEN,KAJpE,CAIsBM,IAJtB;AAAA,QAI4BC,cAJ5B,GAIoEP,KAJpE,CAI4BO,cAJ5B;AAAA,QAI4CC,mBAJ5C,GAIoER,KAJpE,CAI4CQ,mBAJ5C;AAMjC,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,KAAK,EAAEN,MAFX;AAGI,IAAA,WAAW,EAAC,8BAHhB;AAII,IAAA,QAAQ,EAAEK,cAJd;AAKI,IAAA,KAAK,EAAC,gBALV;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,OAAO,EAAC,UAPZ;AAQI,IAAA,QAAQ,EAAEH,QARd;AASI,IAAA,IAAI,EAAEA,QATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYI,oBAAC,QAAD;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAE,WAHf;AAII,IAAA,OAAO,EAAEC,gBAJb;AAKI,IAAA,QAAQ,EAAED,QALd;AAMI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KANhB;AASI,IAAA,OAAO,EAAED,SATb;AAUI,IAAA,IAAI,EAAEG,IAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAwBI;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,IAAI,EAAEF,QAA7C;AAAuD,IAAA,OAAO,EAAEI,mBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAxBJ,CADJ;AA8BH,CApCD;;AAsCA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AACzC,MAAID,SAAS,CAACR,MAAV,KAAqBS,SAAS,CAACT,MAA/B,IAAyCQ,SAAS,CAACP,SAAV,KAAwBQ,SAAS,CAACR,SAA3E,IAAwFO,SAAS,CAACN,QAAV,KAAuBO,SAAS,CAACP,QAAzH,IAAqIM,SAAS,CAACJ,IAAV,KAAmBK,SAAS,CAACL,IAAtK,EAA2K;AACvK,WAAO,IAAP;AACH,GAFD,MAEK;AACD,WAAO,KAAP;AACH;AACJ;;AAED,eAAelB,KAAK,CAACwB,IAAN,CAAWb,WAAX,EAAwBU,aAAxB,CAAf","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './QuizGenWrapperStyles.css'\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst AnswerInput = function (props) {\n\n    const classes = useStyles();\n\n    const { answer, isCorrect, answerId, onCheckboxChange, name, onAnswerChange, onClickRemoveAnswer } = props\n    \n    return (\n        <div className=\"answerInputsStyles\">\n            <TextField\n                className=\"answerInput\"\n                value={answer}\n                placeholder='Wprowadź odpowiedź'\n                onChange={onAnswerChange}\n                label=\"Odpowiedź\"\n                multiline\n                variant=\"outlined\"\n                answerid={answerId}\n                name={answerId}\n            ></TextField>\n            <Checkbox\n                className=\"isAnswerCorrect\"\n                color=\"default\"\n                iscorrect={'isCorrect'}\n                onClick={onCheckboxChange}\n                answerid={answerId}\n                inputProps={{\n                    'aria-label': 'checkbox with default color',\n                }}\n                checked={isCorrect}\n                name={name}\n            />\n            <button className='removeAnswerButton' name={answerId} onClick={onClickRemoveAnswer} >\n                X\n           </button>\n        </div>\n    )\n}\n\nfunction arePropsEqual(prevProps, currProps) {\n    if( prevProps.answer === currProps.answer && prevProps.isCorrect === currProps.isCorrect && prevProps.answerId === currProps.answerId && prevProps.name === currProps.name){\n        return true\n    }else{\n        return false\n    }\n}\n\nexport default React.memo(AnswerInput, arePropsEqual)\n\n"]},"metadata":{},"sourceType":"module"}