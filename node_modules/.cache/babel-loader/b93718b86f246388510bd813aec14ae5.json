{"ast":null,"code":"var _jsxFileName = \"/home/j/Projects/squizuForked/jfdd12-ubuntuwnicy-app/src/components/quizGenerator/QuestionInput.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction QuestionInput(props) {\n  return React.createElement(\"div\", {\n    className: \"questionAndDeleteButtonInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"questionID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.question.id, \" \"), console.log('question input render'), React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Pytanie\",\n    placeholder: \"Wprowad\\u017A pytanie\",\n    name: props.question.id,\n    multiline: true,\n    rows: \"4\",\n    value: props.question.question,\n    onChange: event => props.onChange(props.question.id, event.target.value),\n    className: \"questionInput\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nfunction arePropsEqual(prevProps, nextProps) {\n  if (prevProps.question.question === nextProps.question.question && prevProps.question.id === nextProps.question.id) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default React.memo(QuestionInput, arePropsEqual);","map":{"version":3,"sources":["/home/j/Projects/squizuForked/jfdd12-ubuntuwnicy-app/src/components/quizGenerator/QuestionInput.js"],"names":["React","TextField","QuestionInput","props","question","id","console","log","event","onChange","target","value","arePropsEqual","prevProps","nextProps","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAG1B,SACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,KAAK,CAACC,QAAN,CAAeC,EAA1C,MADJ,EAEKC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAFL,EAGI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,2BADP;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,EAAC,uBAHhB;AAII,IAAA,IAAI,EAAEJ,KAAK,CAACC,QAAN,CAAeC,EAJzB;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,IAAI,EAAC,GANT;AAOI,IAAA,KAAK,EAAEF,KAAK,CAACC,QAAN,CAAeA,QAP1B;AAQI,IAAA,QAAQ,EAAEI,KAAK,IAAIL,KAAK,CAACM,QAAN,CAAeN,KAAK,CAACC,QAAN,CAAeC,EAA9B,EAAkCG,KAAK,CAACE,MAAN,CAAaC,KAA/C,CARvB;AASI,IAAA,SAAS,EAAC,eATd;AAUI,IAAA,MAAM,EAAC,QAVX;AAWI,IAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAoBH;;AAED,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AACzC,MAAID,SAAS,CAACT,QAAV,CAAmBA,QAAnB,KAAgCU,SAAS,CAACV,QAAV,CAAmBA,QAAnD,IAA+DS,SAAS,CAACT,QAAV,CAAmBC,EAAnB,KAA0BS,SAAS,CAACV,QAAV,CAAmBC,EAAhH,EAAoH;AAChH,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ;;AAED,eAAeL,KAAK,CAACe,IAAN,CAAWb,aAAX,EAA0BU,aAA1B,CAAf","sourcesContent":["import React from 'react'\nimport TextField from '@material-ui/core/TextField';\n\n\n\nfunction QuestionInput(props) {\n\n\n    return (\n        <div className='questionAndDeleteButtonInput'>\n            <p className='questionID'>{props.question.id} </p>\n            {console.log('question input render')}\n            <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Pytanie\"\n                placeholder=\"WprowadÅº pytanie\"\n                name={props.question.id}\n                multiline\n                rows=\"4\"\n                value={props.question.question}\n                onChange={event => props.onChange(props.question.id, event.target.value)}\n                className=\"questionInput\"\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n\n        </div>\n    )\n}\n\nfunction arePropsEqual(prevProps, nextProps) {\n    if (prevProps.question.question === nextProps.question.question && prevProps.question.id === nextProps.question.id) {\n        return true\n    } else {\n        return false\n    }\n}\n\nexport default React.memo(QuestionInput, arePropsEqual)\n"]},"metadata":{},"sourceType":"module"}